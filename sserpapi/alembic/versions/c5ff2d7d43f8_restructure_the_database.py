"""restructure the database

Revision ID: c5ff2d7d43f8
Revises: e6133c6c3f43
Create Date: 2023-12-11 14:44:56.854313

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5ff2d7d43f8'
down_revision: Union[str, None] = 'e6133c6c3f43'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('point', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('bandwidth', sa.Integer(), nullable=True),
    sa.Column('connected_to', sa.String(), nullable=True),
    sa.Column('extra_info', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('flat', sa.String(), nullable=True),
    sa.Column('floor', sa.String(), nullable=True),
    sa.Column('holding', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('thana', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backbones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link_from', sa.String(), nullable=False),
    sa.Column('link_to', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lastmiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link_from', sa.String(), nullable=False),
    sa.Column('link_to', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('service')
    op.drop_column('clients', 'address')
    op.add_column('contacts', sa.Column('phone1', sa.String(), nullable=True))
    op.add_column('contacts', sa.Column('phone2', sa.String(), nullable=True))
    op.add_column('contacts', sa.Column('phone3', sa.String(), nullable=True))
    op.add_column('contacts', sa.Column('service_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'contacts', 'services', ['service_id'], ['id'])
    op.drop_column('contacts', 'phone')
    op.add_column('vendors', sa.Column('type', sa.String(), nullable=True))
    op.drop_column('vendors', 'place')
    op.drop_column('vendors', 'thana')
    op.drop_column('vendors', 'union')
    op.drop_column('vendors', 'zilla')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vendors', sa.Column('zilla', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('vendors', sa.Column('union', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('vendors', sa.Column('thana', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('vendors', sa.Column('place', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('vendors', 'type')
    op.add_column('contacts', sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.drop_column('contacts', 'service_id')
    op.drop_column('contacts', 'phone3')
    op.drop_column('contacts', 'phone2')
    op.drop_column('contacts', 'phone1')
    op.add_column('clients', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('service',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bandwidth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vendor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('connected_to', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extra_info', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='service_client_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name='service_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_pkey')
    )
    op.drop_table('lastmiles')
    op.drop_table('backbones')
    op.drop_table('addresses')
    op.drop_table('services')
    # ### end Alembic commands ###
