"""Remove ondelete=RESTRICT from contacts table columns

Revision ID: 34349cc06724
Revises: 4bad285ca631
Create Date: 2024-06-04 15:02:37.938955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '34349cc06724'
down_revision: Union[str, None] = '4bad285ca631'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('contacts_client_id_fkey', 'contacts', type_='foreignkey')
    op.drop_constraint('contacts_vendor_id_fkey', 'contacts', type_='foreignkey')
    op.drop_constraint('contacts_service_id_fkey', 'contacts', type_='foreignkey')
    op.create_foreign_key(None, 'contacts', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(None, 'contacts', 'services', ['service_id'], ['id'])
    op.create_foreign_key(None, 'contacts', 'clients', ['client_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.drop_constraint(None, 'contacts', type_='foreignkey')
    op.create_foreign_key('contacts_service_id_fkey', 'contacts', 'services', ['service_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key('contacts_vendor_id_fkey', 'contacts', 'vendors', ['vendor_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key('contacts_client_id_fkey', 'contacts', 'clients', ['client_id'], ['id'], ondelete='RESTRICT')
    # ### end Alembic commands ###
