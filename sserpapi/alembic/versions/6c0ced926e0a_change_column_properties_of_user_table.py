"""Change column properties of 'user' table

Revision ID: 6c0ced926e0a
Revises: 9b5bffc7637a
Create Date: 2023-11-26 11:43:29.917741

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c0ced926e0a'
down_revision: Union[str, None] = '9b5bffc7637a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'user_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'scope',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_users_user_name'), 'users', ['user_name'], unique=True)
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_user_name'), table_name='users')
    op.alter_column('users', 'scope',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'user_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
